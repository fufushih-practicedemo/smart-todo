// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(cuid())
  email          String  @unique
  name           String
  role           String?
  hashedPassword String?
  picture        String?

  session Session[]

  todos          Todo[]
  notifications  Notification[]
  kanbanSettings KanbanSettings?
}

model Session {
  id        String   @id
  expiresAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Todo {
  id          String  @id @default(cuid())
  title       String
  isDone      Boolean @default(false)
  isDeleted   Boolean @default(false)
  description String?

  startDate     DateTime?
  endDate       DateTime?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  userId        String
  user          User              @relation(fields: [userId], references: [id])
  labels        Label[]
  subTodos      Todo[]            @relation("SubTodos")
  parentTodo    Todo?             @relation("SubTodos", fields: [parentId], references: [id])
  parentId      String?
  notifications Notification[]
  reminder      ReminderSchedule?

  position Int           @default(0) // To kanban column order
  columnId String?
  column   KanbanColumn? @relation(fields: [columnId], references: [id])
}

model Label {
  id    String @id @default(cuid())
  name  String @unique
  type  String @default("CUSTOM") // Can be: PRIORITY, CATEGORY, STATUS, CUSTOM
  todos Todo[]

  @@index([type])
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  isRead    Boolean  @default(false)
  type      String // Can be 'TODO_CREATED', 'TODO_UPDATED', 'TODO_DELETED', etc.
  createdAt DateTime @default(now())

  userId String
  user   User    @relation(fields: [userId], references: [id])
  todoId String?
  todo   Todo?   @relation(fields: [todoId], references: [id])
}

model ReminderSchedule {
  id        String   @id @default(cuid())
  isEnabled Boolean  @default(true)
  startTime DateTime // Reminder time

  // Repeat pattern settings
  repeatType String? // NONE, DAILY, WEEKLY, MONTHLY
  repeatDays String? // Used for weekly repeats, e.g., "1,3,5" means Monday, Wednesday, Friday
  repeatDate Int? // Used for monthly repeats, e.g., 15 means the 15th of every month

  // Repeat interval
  repeatStart DateTime? // Repeat start date
  repeatEnd   DateTime? // Repeat end date

  // Last reminder time (used for tracking and calculating the next reminder)
  lastTriggered DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  todoId String @unique
  todo   Todo   @relation(fields: [todoId], references: [id], onDelete: Cascade)
}

model KanbanColumn {
  id       String  @id @default(cuid())
  labelId  String // 對應到 Label 的 id
  position Int     @default(0) // 欄位順序
  isHidden Boolean @default(false) // 是否隱藏該欄位
  limit    Int? // 可選: WIP limit

  todos      Todo[]
  settingsId String
  settings   KanbanSettings @relation(fields: [settingsId], references: [id], onDelete: Cascade)

  @@unique([settingsId, labelId])
  @@index([labelId])
}

model KanbanSettings {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  columns KanbanColumn[]
  userId  String         @unique
  user    User           @relation(fields: [userId], references: [id])
}
